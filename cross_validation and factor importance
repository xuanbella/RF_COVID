##based on the model established in RF_model (bweek_train.forest)
##factor importance
importance_bweek<- data.frame(importance(bweek_train.forest), check.names = FALSE)
head(importance_bweek)

##use rfpermut() for factor importance analysis
#here we use Hos1w as ana example for the targets
library(rfPermute)
set.seed(123)
bweek_train<-bweek_train[,1:16]
bweek_rfP <- rfPermute(Hos1w~., data = bweek_train, importance = TRUE, ntree = 300, mtry=4, nrep = 1000, num.cores = 1)
bweek_rfP

importance_bweek.scale <- data.frame(importance(bweek_rfP, scale = TRUE), check.names = FALSE)
importance_bweek.scale
write.csv(importance_bweek.scale, "Hos1w_importance.csv")

##Corss-validation
library(randomForest)
bweek_train<-bweek_train[,-18]
bweek_train_try<-data.frame(apply(bweek_train,2,as.numeric))
set.seed(123)
bweek_train.cv <- replicate(5, rfcv(bweek_train_try[-ncol(bweek_train_try)], bweek_train_try$ICU_21, cv.fold = 5, step = 1.2), simplify = FALSE)
bweek_train.cv

##plot cross-validation errors
bweek_train.cv <- data.frame(sapply(bweek_train.cv, '[[', 'error.cv'))
bweek_train.cv$variables <- rownames(bweek_train.cv)
library(reshape2)
bweek_train.cv <- reshape2::melt(bweek_train.cv, id = 'variables')
bweek_train.cv$variables <- as.numeric(as.character(bweek_train.cv$variables))

bweek_train.cv.mean <- aggregate(bweek_train.cv$value, by = list(bweek_train.cv$variables), FUN = mean)
head(bweek_train.cv.mean, 15)

library(ggplot2)
dev.new(width=20, height=20,pointsize=12)
Hos1w<-ggplot(bweek_train.cv.mean, aes(Group.1, x)) +
  geom_line() +
  theme(panel.grid = element_blank(), panel.background = element_rect(color = 'black', fill = 'transparent')) +
  labs(title = '',x = 'Number of variables', y = 'Cross-validation error')

cross_Hos1w
